You need to first compile the program in Eclipse, see Build.txt
The example scripts for compiling are for Windows, but Linux could also be used
Linux with a desktop GUI (window manager) is needed for converting the output into StarDict or dictd
compatible file. I use a virtual Ubuntu image in VMware WS. You can also use another virtualizer such
as DropBox, or a machine running Linux.

Download one of the supported Wiktionary article dumps:

English, Finnish, Norwegian, Swedish

English Wiktionary is at
https://dumps.wikimedia.org/enwiktionary/
Find the latest directory and download enwiktionary-yyyymmdd-pages-articles.xml.bz2 from it
You can also download the latest one from 
http://dumps.wikimedia.org/enwiktionary/latest/enwiktionary-latest-pages-articles.xml.bz2
but I prefer to have the directory and unarchived file name show the edition (yyyymmdd) in it. The sample
cmd script assumes such a naming scheme.

Other Wiktionaries are at http://dumps.wikimedia.org/backup-index.html

Extract the bz2 file into a subfolder. I use 7-Zip. You don't need the bz2 file after extracting it.

A. COMPILING THE ENGLISH WIKTIONARY, WITH ENTRIES FOR ALL LANGUAGES

Change EDITION to match with the Wiktionary edition you have downloaded in
StripNamespaces ALL.cmd.
Run StripNamespaces ALL.cmd. I like to due it via going to cmd.exe.
It prints progress every 10 000 entries.
Stripping the English Wiktionary takes long even on a fast computer. Takes currently
(2016-11) about 20 mins. Stripping the English entries is slower at first than after about
150 000 entries. There are currently about 4 960 000 entries!

Running ReadStripped for large Wiktionaries such as the English one is clumsy at the moment. To produce
StarDict files as output, it uses three script files (SD = StarDict):
 1) ReadStripped SD ALL runall.cmd
 2) ReadStripped SD ALL.cmd
 3) ReadStripped SD ALL restart.cmd
The first script calls the two others. It currently needs to perform 4 restarts to handle all
English Wiktionary entries. If a lot of new entries have been added, another restart may need
to be added.

The MEM and/or STCK variables in ReadStripped SD ALL.cmd script file have been set as
-Xmx2600M and -Xss400M which should suffice for one pass. The reason for restarts is indeed
that not so much memory is required. Each restart continues processing where the previous
run left off.

Change EDITION to match with the Wiktionary edition you have downloaded in both
ReadStripped SD ALL runall.cmd and ReadStripped SD ALL.cmd.

B. COMPILING A WIKTIONARY OF ANOTHER LANGUAGE

There is a sample script file for each supported language. They really only differ in having
a different LANG variable set. I use the Finnish Wiktionary as an example.

Change EDITION to match with the Wiktionary edition you have downloaded in
StripNamespaces fiwiktionary.cmd.

Run StripNamespaces fiwiktionary.cmd. It doesn't take many minutes on a fast computer.

Change EDITION to match with the Wiktionary edition you have downloaded in 
ReadStripped SD fiwiktionary.cmd and run it.

C. UPDATING SUPPORTED LANGUAGES DURING ReadStripped RUNS

While running, ReadStripped reads in lang\language codes.csv, which get packaged in the main
folder of the runnable JAR when you export it in Eclipse. It is a list of language names with
unique abbreviations.

The program rejects any unknown language names and outputs them into new language codes.csv.
You can check that file and insert any new languages into language codes.csv.

If you don't want entries of some languages to be included, you can remove them from your
copy of language codes.csv. Just don't commit it :) E.g. I don't need entries for various
Asian languages, since I can't even read their scripts.

N.b. this has nothing to do with which language's Wiktionaries the program supports, which
is currently hard coded in the program.

All Wiktionaries have entries for numerous other languages. Just that e.g. the English
Wiktionary has the definitions of the entries in the English language.

D. COMBINING THE OUTPUT FILES

I perform the steps in D and E in Linux running Ubuntu 15.04. I run it inside VMware WOrkstation.

You need to have dos2unix installed. If not:

sudo apt install dos2unix

Copy conv2unix.sh and sort-ALL.sh to Linux. I do it using the shared folders feature of VMware Workstation.

By default, conv2unix.sh processes wikt-en-ALL-YYYY-MM-DD, where YYYY-MM-DD is
the current date. Change this if necessary by editing with e.g. vi.

Run conv2unix.sh. The script produces wikt-en-ALL.txt which needs to be sorted.

Run sort-ALL.sh. It produces wikt-en-ALL-sorted.txt.

E. PARSING THE ENTRIES AND CREATING STARDICT FILES

The Ubuntu repo package in 16.04 LTS doesn't work since it doesn't support multiple lines having the
same entry name.

You can try to download and install (dpkg -i for the deb)
http://sourceforge.net/projects/stardict-4/files/3.0.6/stardict_3.0.6-1_all.deb/download

It didn't install in my Ubuntu 64b 16.04 LTS. It needs libsigc++-2.0-0c2a and I have libsigc++-2.0.0-v5.

I was however able to compile the stardict-tools part of the package. Download
https://sourceforge.net/projects/stardict-4/files/3.0.6/stardict-3.0.6.tar.bz2/download

cd ~/Downloads
tar xfj stardict-3.0.6.tar.bz2
cd stardict-3.0.6/

Install libraries needed for building:
sudo apt install automake
sudo apt install libgtk2.0-dev
sudo apt install libxml2-dev
(sudo apt install libglib2.0-dev - installed already as dependency of libtk2.0-dev)
(sudo apt install zlib1g-dev - installed already as dependency of libtk2.0-dev)
sudo apt install libmysqlclient-dev

Also install dictzip, which is used to produce the .dict.dz file:

sudo apt install dictzip

./autogen.sh
./configure --disable-dict
  This tells make we want to compile only the stardict-tools portion of the code
make
  
cd tools/src
./stardict-editor
In the default Compile tab, press Browse and select wikt-en-ALL-sorted.txt
Press Compile. The window is greyed out until processing is ready.
The program says "Done!" if the conversion worked. It gives warnings for some lines but that should be ok.

The conversion process produces files like:

wikt-en-ALL.dict.dz
  The dictd and Stardict compatible dictionary file
wikt-en-ALL.idx
  The index file needed by Stardict
wikt-en-ALL.ifo
  Description file, can be edited in a text editor
  
~/Downloads/stardict-tools-3.0.2/src/example.ifo:
  StarDict's dict ifo file
  version=2.4.2
  wordcount=100
  idxfilesize=100
  bookname=example
  author=the author name
  email=author@email
  website=this dictionary's project website link
  description=convert to StarDict by...
  date=2003.05.10
  sametypesequence=m

You may copy wikt-en-ALL.dict.dz and wikt-en-ALL.idx to e.g. your phone and use it with a Stardict compatible
GUI such as Colordict, or if you have installed the Stardict GUI in your PC, you can use the file with it.

F. VALIDATING AND INSTALLING A DICTD COMPATIBLE ARCHIVE

Step E. needs to be performed first.

cd ~/Downloads/stardict_3.0.6/tools/src/
./stardict_verify /mnt/hgfs/tmp-OwnStarDict/x/wikt-en-ALL.ifo
  (see X:\Dropbox\Dictionary\StarDict\HowToCreateDictionary.txt)
sudo cp wikt-en-ALL.dict.dz /usr/share/dictd/

dictdconfig -l
  lists current dictionary entries entries
sudo dictdconfig -w
  --> /var/lib/dictd/db.list
sudo /etc/init.d/dictd restart
dictdconfig -l
  confirm the new dictionary is installed